version: 2.1
description: |
  A private orb containing reusable jobs and commands for the monorepo.

# Reusable commands are defined once, here.
commands:
  install_task:
    steps:
      - run:
          name: "Install Task"
          command: |
            sudo sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin

  setup_terraform_cache:
    steps:
      - run:
          name: "Ensure plugin cache directory exists"
          command: mkdir -p /home/circleci/.terraform.d/plugin-cache
      - run:
          name: "Generate Cache Key"
          command: find services -name ".terraform.lock.hcl" -print0 | sort -z | xargs -0 sha256sum > cache_checksum.txt
      - restore_cache:
          keys:
            - terraform-providers-v2-{{ checksum "cache_checksum.txt" }}
            - terraform-providers-v2-

  save_terraform_cache:
    steps:
      - save_cache:
          key: terraform-providers-v2-{{ checksum "cache_checksum.txt" }}
          paths:
            - "/home/circleci/.terraform.d/plugin-cache"

# Reusable jobs are defined here.
jobs:
  # This single, parameterized job replaces your three separate terraform jobs.
  terraform_ci_job:
    parameters:
      mode:
        type: enum
        enum: ["validate", "plan", "apply"]
        default: "validate"
    docker:
      - image: cimg/base:stable
    environment:
      TF_PLUGIN_CACHE_DIR: "/home/circleci/.terraform.d/plugin-cache"
    steps:
      - checkout
      - when:
          condition:
            equal: [ "apply", << parameters.mode >> ]
          steps:
            - attach_workspace:
                at: ~/project
      - setup_terraform_cache
      - aws-cli/setup:
          role-arn: ${AWS_OIDC_ROLE_ARN}
      - terraform/install
      - install_task
      - run:
          name: "Run Terraform << parameters.mode >>"
          command: |
            case "<< parameters.mode >>" in
              validate)
                task validate-changed
                ;;
              plan)
                task plan-changed env=staging
                ;;
              apply)
                task apply-changed env=staging
                ;;
            esac
      - when:
          condition:
            equal: [ "plan", << parameters.mode >> ]
          steps:
            - persist_to_workspace:
                root: .
                paths:
                  - .tfplans
      - save_terraform_cache