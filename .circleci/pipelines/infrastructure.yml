# This is the primary configuration file. It runs on every commit.
# Its only job is to check for changes and decide whether to continue to the main workflow.
version: 2.1

# 1. Enable Dynamic Configuration and define the pipeline parameter
parameters:
  run_tf_workflow:
    type: boolean
    default: false

orbs:
  # The continuation orb is required for this dynamic workflow
  continuation: circleci/continuation@0.3.1

# This job will run first to check for changes.
jobs:
  check_for_changes:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      # Step 1: Check for changes and create a sentinel file if they exist.
      - run:
          name: "Check for changed services"
          command: |
            CHANGED_SERVICES=$(git diff-tree --no-commit-id --name-only -r "$CIRCLE_SHA1" | awk -F'/' '/^services\// {print $2}' | sort -u | tr '\n' ' ')
            if [ -n "$CHANGED_SERVICES" ]; then
              echo "Changes detected in services: $CHANGED_SERVICES"
              echo "Marking pipeline for continuation."
              # Create a simple file to act as a signal
              mkdir -p /tmp/workspace
              touch /tmp/workspace/changes_detected
            else
              echo "No changes detected in any services. Stopping pipeline."
            fi
      # Step 2: This step is conditional and only runs if the sentinel file exists.
      - when:
          condition:
            file.exists:
              path: /tmp/workspace/changes_detected
          steps:
            # Trigger the second stage of the pipeline using the infrastructure-plan.yml file
            - continuation/continue:
                configuration_path: .circleci/pipelines/infrastructure-plan.yml
                parameters: '{ "run_tf_workflow": true }'

# This is the initial workflow that will always run.
workflows:
  check_workflow:
    jobs:
      - check_for_changes:
          context: circleci-secrets
          filters:
            branches:
              only:
                - kyle
